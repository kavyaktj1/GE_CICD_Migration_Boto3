{"StartAt": "START FLAT_FILE CONTIGENCY COMPACTION JOBS", "States": {"START FLAT_FILE CONTIGENCY COMPACTION JOBS": {"Type": "Pass", "InputPath": "$", "ResultPath": "$", "Next": "RAW CRAWLER"}, "RAW CRAWLER": {"Type": "Choice", "Choices": [{"Variable": "$.INPUT.RAW_CRAWLER", "StringEquals": "Y", "Next": "SKIP  RAW CRAWLER"}], "Default": "START RAW CRAWLER"}, "START RAW CRAWLER": {"Type": "Task", "Resource": "arn:aws:states:::states:startExecution.sync", "ResultPath": "$.RawCrawler", "Parameters": {"Input": {"CRAWLER_NAME": "crw_lnd_s3_flat_file_hat_separator"}, "StateMachineArn": "arn:aws:states:us-east-1:541574621075:stateMachine:COMPACTION_CRAWLER"}, "Retry": [{"ErrorEquals": ["States.Timeout"], "MaxAttempts": 3, "IntervalSeconds": 60, "BackoffRate": 2}], "Catch": [{"ErrorEquals": ["States.TaskFailed"], "Next": "SNS_CRAWLER_FAILED"}], "Next": "SKIP  RAW CRAWLER"}, "SNS_CRAWLER_FAILED": {"Type": "Task", "Resource": "arn:aws:states:::sns:publish", "Parameters": {"TopicArn": "arn:aws:sns:us-east-1:541574621075:ODP_SFN_FAILURE", "Message.$": "$.Cause", "Subject": " AWS STEP FUNCTION GLPROD CRAWLER FAILED !"}, "End": false}, "SKIP  RAW CRAWLER": {"Type": "Pass", "Next": "GET LAMBDA"}, "GET LAMBDA": {"Type": "Choice", "Choices": [{"Variable": "$.INPUT.GET_LAMBDA", "StringEquals": "Y", "Next": "SKIP GET LAMBDA"}], "Default": "EXECUTE GET LAMBDA"}, "EXECUTE GET LAMBDA": {"Type": "Task", "InputPath": "$", "ResultPath": "$.INPUT.BATCH_NUMBER", "Resource": "arn:aws:lambda:us-east-1:541574621075:function:ddb_get_lambda", "Next": "SKIP GET LAMBDA"}, "SKIP GET LAMBDA": {"Type": "Pass", "InputPath": "$", "ResultPath": "$.SKIP_LAMBDA", "Next": "StartParallel"}, "StartParallel": {"Type": "Parallel", "Next": "MIRROR CRAWLER", "ResultPath": "$.parallelResult", "Branches": [{"StartAt": "FLAT_FILE_GOOD_ONHAND_EXTRACT", "States": {"FLAT_FILE_GOOD_ONHAND_EXTRACT": {"Type": "Choice", "Choices": [{"Variable": "$.INPUT.job_lnd_mrr_full_refresh_flat_file_good_onhand_extract", "StringEquals": "Y", "Next": "PASS FLAT_FILE_GOOD_ONHAND_EXTRACT"}], "Default": "LOAD FLAT_FILE_GOOD_ONHAND_EXTRACT"}, "LOAD FLAT_FILE_GOOD_ONHAND_EXTRACT": {"Type": "Task", "ResultPath": "$.FLAT_FILE_GOOD_ONHAND_EXTRACT", "Resource": "arn:aws:states:::glue:startJobRun.sync", "Parameters": {"JobName": "job_lnd_mrr_full_refresh_flat_file_good_onhand_extract", "Arguments": {"--batch_number.$": "$.INPUT.BATCH_NUMBER"}}, "Retry": [{"ErrorEquals": ["States.Timeout"], "MaxAttempts": 3, "IntervalSeconds": 60, "BackoffRate": 2}], "Catch": [{"ErrorEquals": ["States.TaskFailed"], "Next": "SNS_FLAT_FILE_GOOD_ONHAND_EXTRACT_FAILED"}], "Next": "PASS FLAT_FILE_GOOD_ONHAND_EXTRACT"}, "SNS_FLAT_FILE_GOOD_ONHAND_EXTRACT_FAILED": {"Type": "Task", "Resource": "arn:aws:states:::sns:publish", "Parameters": {"TopicArn": "arn:aws:sns:us-east-1:541574621075:ODP_SFN_FAILURE", "Message.$": "$.Cause", "Subject": " AWS Glue job for FLAT_FILE_GOOD_ONHAND_EXTRACT Failed!"}, "Next": "FLAT_FILE_GOOD_ONHAND_EXTRACT_ACTIVITY"}, "FLAT_FILE_GOOD_ONHAND_EXTRACT_ACTIVITY": {"Type": "Task", "Resource": "arn:aws:states:us-east-1:541574621075:activity:COMPACTION_MAPP_FLAT_FILE_GOOD_ONHAND_EXTRACT_ACTIVITY", "End": true}, "PASS FLAT_FILE_GOOD_ONHAND_EXTRACT": {"Type": "Pass", "End": true}}}, {"StartAt": "FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP", "States": {"FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP": {"Type": "Choice", "Choices": [{"Variable": "$.INPUT.job_lnd_mrr_incr_refresh_no_ov_cntigncy_flat_file_backorders_cds_snapshot_f_mapp", "StringEquals": "Y", "Next": "PASS FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP"}], "Default": "LOAD FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP"}, "LOAD FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP": {"Type": "Task", "Resource": "arn:aws:states:::glue:startJobRun.sync", "ResultPath": "$.FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP", "Parameters": {"JobName": "job_lnd_mrr_incr_refresh_no_ov_cntigncy_flat_file_backorders_cds_snapshot_f_mapp", "Arguments": {"--batch_number.$": "$.INPUT.BATCH_NUMBER"}}, "Retry": [{"ErrorEquals": ["States.Timeout"], "MaxAttempts": 3, "IntervalSeconds": 60, "BackoffRate": 2}], "Catch": [{"ErrorEquals": ["States.TaskFailed"], "Next": "SNS_FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP"}], "Next": "PASS FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP"}, "SNS_FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP": {"Type": "Task", "Resource": "arn:aws:states:::sns:publish", "Parameters": {"TopicArn": "arn:aws:sns:us-east-1:541574621075:ODP_SFN_FAILURE", "Message.$": "$.Cause", "Subject": " AWS Glue job for FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP Failed!"}, "Next": "FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP_ACTIVITY"}, "FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP_ACTIVITY": {"Type": "Task", "Resource": "arn:aws:states:us-east-1:541574621075:activity:COMPACTION_MAPP_FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP_ACTIVITY", "End": true}, "PASS FLAT_FILE_BACKORDERS_CDS_SNAPSHOT_F_MAPP": {"Type": "Pass", "End": true}}}]}, "MIRROR CRAWLER": {"Type": "Choice", "Choices": [{"Variable": "$.INPUT.MIRROR_CRAWLER", "StringEquals": "Y", "Next": "SKIP  MIRROR CRAWLER"}], "Default": "START MIRROR CRAWLER"}, "START MIRROR CRAWLER": {"Type": "Task", "ResultPath": "$.MRR_CRAWLER", "Resource": "arn:aws:states:::states:startExecution.sync", "Parameters": {"Input": {"CRAWLER_NAME": "crw_compacted_mrr_s3_flat_file"}, "StateMachineArn": "arn:aws:states:us-east-1:541574621075:stateMachine:COMPACTION_CRAWLER"}, "Retry": [{"ErrorEquals": ["States.Timeout"], "MaxAttempts": 3, "IntervalSeconds": 60, "BackoffRate": 2}], "Catch": [{"ErrorEquals": ["States.TaskFailed"], "Next": "SNS_CRAWLER_FAILED"}], "Next": "SKIP  MIRROR CRAWLER"}, "SKIP  MIRROR CRAWLER": {"Type": "Pass", "Next": "Put Lambda"}, "Put Lambda": {"Type": "Choice", "Choices": [{"Variable": "$.INPUT.PUT_LAMBDA", "StringEquals": "Y", "Next": "Skip Put Lambda"}], "Default": "Execute Put Lambda"}, "Execute Put Lambda": {"Type": "Task", "InputPath": "$", "ResultPath": "$.putLambda", "Resource": "arn:aws:lambda:us-east-1:541574621075:function:ddb_put_lambda", "Next": "Skip Put Lambda"}, "Skip Put Lambda": {"Type": "Pass", "Next": "Skip Copy Mirror to Redshift Stage"}, "Skip Copy Mirror to Redshift Stage": {"Type": "Choice", "Choices": [{"Variable": "$.INPUT.RS_COPY_INSERT", "StringEquals": "Y", "Next": "Redshift Copy Done"}], "Default": "Copy Mirror to Redshift Stage"}, "Copy Mirror to Redshift Stage": {"Type": "Task", "ResultPath": "$.Mirror to Redshift", "Resource": "arn:aws:states:::glue:startJobRun.sync", "Parameters": {"JobName": "job_mrr_redshift_copy", "Arguments": {"--source_system": "cntigncy_flat_file"}}, "Retry": [{"ErrorEquals": ["States.Timeout"], "MaxAttempts": 3, "IntervalSeconds": 60, "BackoffRate": 2}], "Catch": [{"ErrorEquals": ["States.TaskFailed"], "Next": "SNS_RS_COPY_INSERT_FAILED"}], "Next": "Redshift Copy Done"}, "SNS_RS_COPY_INSERT_FAILED": {"Type": "Task", "Resource": "arn:aws:states:::sns:publish", "Parameters": {"TopicArn": "arn:aws:sns:us-east-1:541574621075:ODP_SFN_FAILURE", "Message.$": "$.Cause", "Subject": " AWS GLUE JOB FOR RS_COPY_INSERT FAILED !"}, "End": false}, "Redshift Copy Done": {"Type": "Pass", "InputPath": "$", "OutputPath": "$", "Next": "Completed"}, "Completed": {"Type": "Pass", "InputPath": "$.SKIP_LAMBDA", "Next": "SNS_MAPP_FLAT_FILE_COMPACTION_CONTIGENCY_SUCCESS"}, "SNS_MAPP_FLAT_FILE_COMPACTION_CONTIGENCY_SUCCESS": {"Type": "Task", "InputPath": "$", "ResultPath": "$.snsResult", "Resource": "arn:aws:states:::sns:publish", "Parameters": {"TopicArn": "arn:aws:sns:us-east-1:541574621075:ODP_SFN_SUCCESS", "Message": {"Subject": "AWS Step function for MAPP_FLAT_FILE_COMPACTION_CONTIGENCY_SUCCESS completed successfully!!"}}, "Next": "WAIT SNAPSHOT LAMBDA"}, "WAIT SNAPSHOT LAMBDA": {"Type": "Task", "InputPath": "$", "ResultPath": "$", "Parameters": {"DDB_KEY_TO_UPDATE": "sleep"}, "Resource": "arn:aws:lambda:us-east-1:541574621075:function:mapp_snapshot_lock", "End": true}}}